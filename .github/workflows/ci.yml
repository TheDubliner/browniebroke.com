name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        action:
          - eslint
          - prettier
          - tsc

    steps:
      - uses: actions/checkout@v2

      # Setup node based on .nvmrc
      # https://github.com/actions/setup-node/issues/32#issuecomment-539794249
      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm
      - uses: actions/setup-node@v2
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'

      - run: yarn
      - run: |
          yarn lint:${{ matrix.action }}

  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # PR: check deploy preview
      - name: Wait for the Netlify Preview
        if: ${{ github.event_name == 'pull_request' }}
        uses: jakepartusch/wait-for-netlify-action@v1
        id: netlify
        with:
          site_name: 'browniebroke'
          max_timeout: 360
      - name: Audit URLs using Lighthouse
        if: ${{ github.event_name == 'pull_request' }}
        uses: treosh/lighthouse-ci-action@v7
        with:
          urls: |
            ${{ steps.netlify.outputs.url }}
            ${{ steps.netlify.outputs.url }}/blog/
            ${{ steps.netlify.outputs.url }}/blog/migrating-project-to-poetry/
          # budgetPath: ./budget.json
          # configPath: ./lighthouserc.json
          uploadArtifacts: true

      # Push: check production
      - name: Wait for prod deploy
        if: ${{ github.event_name == 'push' }}
        run: sleep 360 # 6 mins in seconds
      - name: Audit URLs using Lighthouse
        if: ${{ github.event_name == 'push' }}
        uses: treosh/lighthouse-ci-action@v7
        with:
          urls: |
            https://browniebroke.com/
            https://browniebroke.com/blog/
            https://browniebroke.com/blog/migrating-project-to-poetry/
          # budgetPath: ./budget.json
          # configPath: ./lighthouserc.json
          uploadArtifacts: true
          serverBaseUrl: ${{ secrets.LHCI_SERVER_URL }}
          serverToken: ${{ secrets.LHCI_SERVER_TOKEN }}
